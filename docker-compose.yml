version: "3"

services:
  app:
    build:
      context: .
    ports:
      - "8080:8080"
    stdin_open: true
    tty: true
    volumes:
      - .:/app
    command: >
      sh -c "  python manage.py wait_for_db && 
               python manage.py migrate && 
               python manage.py runserver 0.0.0.0:8080"

    environment:
      # DATABASE CONNECTION PARAMS
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
      - DB_PORT=5432
      
      - DATABASE_URL=postgresql://postgres:supersecretpassword@db:5432/app

      - SECRET_KEY
      - DEBUG

      - REDIS_URL=redis://redis:6379

    depends_on:
      - db
      - celery
      - redis
  db:
    image: postgis/postgis
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
  redis:
    image: "redis:alpine"
  celery:
    build: .
    command: celery worker -A app -l info
    environment:
      # DATABASE CONNECTION PARAMS
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
      - DB_PORT=5432

      # - DATABASE_URL=postgresql://$DB_USER:$DB_PASS@$DB_HOST:$DB_PORT/$DB_NAME
      - DATABASE_URL=postgresql://postgres:supersecretpassword@db:5432/app

      - SECRET_KEY
      - DEBUG
      
      - REDIS_URL=redis://redis:6379
    volumes: 
      - .:/app
    depends_on: 
      - db
      - redis

    
# docker-compose run --rm app sh -c "python manage.py test"